#!/usr/bin/ruby
# coding: utf-8
# apt-get install libole-ruby
# or gem install ruby-ole
# (주)한글과컴퓨터의 한컴오피스 글 문서 파일 구조(.hwp) 참고하여 만들었습니다.

require 'ole/storage'
require 'zlib'
require 'stringio'

if ARGV.length == 0
    puts "Usage: $ ruby hwp.rb filename.hwp"
    exit
end

ole = Ole::Storage.open(ARGV[0], 'r')
file = ole.file.open('FileHeader')
file.pos = 36
property = file.read(4).unpack("V")[0]

if (property & 1) == 1
    compressed = true
else
    compressed = false
end

ole.dir.entries('BodyText').each do |f|
    if f.start_with? "Section"
        section = ole.file.read("BodyText/#{f}")

        if compressed
            z = Zlib::Inflate.new(-15)
            buf = StringIO.new(z.inflate section)
            z.finish
            z.close
        else
            buf = StringIO.new(section)
        end

        while(bytes = buf.read(4)) # 레코드 헤더를 읽는다
            i = bytes.unpack("V")[0]
            record_id = i & 0x3ff
            record_size = (i >> 20) & 0xfff

            if record_size == 0xfff
                record_size = (buf.read 4).unpack("V")[0]
            end 

            if record_id == 67
                data = buf.read(record_size)

                s_io = StringIO.new data
                result = []
                while(ch = s_io.read(2))
                    case ch.unpack("v")[0]
                    # 2-byte control string
                    when 0,10,13,24,25,26,27,28,29,31
                    when 30 # 0x1e record separator (RS)
                        result << 0x20 # 임시로 스페이스로 대체
                    # 16-byte control string, inline
                    when 4,5,6,7,8,19,20
                        s_io.pos += 14
                    when 9 # tab
                        result << 9
                        s_io.pos += 14
                    # 16-byte control string, extended
                    when 1,2,3,11,12,14,15,16,17,18,21,22,23
                        s_io.pos += 14
                    else
                        result << ch.unpack("v")[0]
                    end
                end
                puts result.pack("U*")
                s_io.close
            else
                buf.pos += record_size
            end
        end
        buf.close
    end
end

ole.close
